

// import React, { useContext } from "react";
// import { TicketContext } from "../../context/TicketContext";
// import { toast } from "react-toastify";

// export default function TicketCard({ ticket }) {
// const { addTask, tasks } = useContext(TicketContext);
// const isInTask = tasks.some(ticket.id === ticket.id);

// const handleAdd = () => {
//    if (isInTask) {
//        toast.warn(`${ticket.title} is already in In-Progress.`);
//        return;
//     }

// addTask(ticket);
//  toast.info(`${ticket.title} added to In-Progress!`);
// };

// const getStatusClass = (status) => {
// switch (status.toLowerCase()) {
// case 'open':
// return 'bg-green-100 text-green-700 border-green-300';
// case 'in-progress':
//  return 'bg-yellow-100 text-yellow-700 border-yellow-300';
// default:
//  return 'bg-gray-100 text-gray-700 border-gray-300';
//  }
// };

//  const getPriorityClass = (priority) => {
//  switch (priority.toLowerCase()) {
//  case 'high':
//  return 'text-red-600 font-semibold';
// case 'medium':
//  return 'text-yellow-600 font-semibold';
// case 'low':
//  return 'text-green-600 font-semibold';
//  default:
//  return 'text-gray-600';
//  }
//  };

//  // ‡¶°‡ßá‡¶ü ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü (‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£‡¶∏‡ßç‡¶¨‡¶∞‡ßÇ‡¶™ 1/15/2024 ‡¶ï‡ßá 15/01/24 ‡¶¨‡¶æ ‡¶∂‡ßÅ‡¶ß‡ßÅ 15/01 ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø)
// const formatDate = (dateString) => {
//  if (!dateString) return '';
//  try {
//  const date = new Date(dateString);
//  return date.toLocaleDateString('en-US', { day: 'numeric', month: 'numeric' });
//  } catch (e) {
// return dateString; // Invalid date
//  }
// };


//  return (
//  <article className="bg-white border border-gray-200 p-4 rounded-lg shadow-sm hover:shadow-md transition duration-200">
//  {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
// <div className="flex justify-between items-start mb-2">
//  <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
//  {ticket.title}
// </h3>
//  {/* ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú: ‡¶ó‡ßã‡¶≤ ‡¶ï‡ßã‡¶£‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞ */}
//  <span className={`text-xs px-2 py-0.5 rounded-full border ${getStatusClass(ticket.status)} whitespace-nowrap`}>
//  {ticket.status}
//  </span>
//  </div>

//  {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
//  <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
// {ticket.description}
//  </p>

//  {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
//  <div className="flex justify-between items-end border-t border-gray-100 pt-3 mt-3">

//  {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
//  <div className="flex flex-col gap-1 text-xs">
//  <div className="text-gray-500">
//  #{ticket.id} ‚Ä¢ <span className="font-medium text-gray-700">{ticket.customer}</span>
// </div>
//  <div className={`uppercase ${getPriorityClass(ticket.priority)}`}>
//  {ticket.priority} PRIORITY
//  </div>
//  </div>

//  {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶¨‡¶æ‡¶ü‡¶® ‡¶è‡¶¨‡¶Ç ‡¶°‡ßá‡¶ü */}
//  <div className="flex items-center gap-3">
//  {/* ‡¶°‡ßá‡¶ü */}
// <div className="text-xs text-gray-500 flex items-center gap-1">
//  {/* ‡¶ï‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶Ü‡¶á‡¶ï‡¶® ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶® */}
//  {/* <CalendarIcon className="w-4 h-4"/> */}
//              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
//                 <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5" />
//              </svg>
//  {formatDate(ticket.date)}
//  </div>
// </div>
//  </div>
//  </article>
//  );
// }





// import React, { useContext } from "react";
// import { TicketContext } from "../../context/TicketContext";
// import { toast } from "react-toastify";
// // ... (CalendarIcon SVG remains the same)

// export default function TicketCard({ ticket }) {
//   const { addTask, tasks } = useContext(TicketContext);
  
//   // ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü‡¶ü‡¶ø ‡¶á‡¶®-‡¶™‡ßç‡¶∞‡¶ó‡ßç‡¶∞‡ßá‡¶∏‡ßá ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
//   const isInTask = tasks.some(t => t.id === ticket.id);

//   // ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®: Add to Task
//   const handleAdd = () => {
//     if (isInTask) {
//        toast.warn(`${ticket.title} is already in In-Progress.`);
//        return;
//     }
//     addTask(ticket);
//     toast.info(`${ticket.title} added to In-Progress!`);
//   };

//   // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∞‡¶Ç ‡¶ì ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const getStatusClass = (status) => {
//     switch (status.toLowerCase()) {
//       case 'open':
//         // üü¢ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶ó‡ßã‡¶≤ ‡¶∏‡¶ø‡¶ó‡¶®‡¶æ‡¶≤: DaisyUI ‡¶è‡¶∞ badge-success ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
//         return 'badge-success'; 
//       case 'in-progress':
//         return 'badge-warning'; 
//       default:
//         return 'badge-neutral';
//     }
//   };
  
//   // ... (getPriorityClass and formatDate remain the same) ...

//   return (
//     // ‡¶™‡ßÅ‡¶∞‡ßã ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø‡¶§‡¶æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
//     <article 
//       className={`bg-white border p-4 rounded-lg shadow-sm transition duration-200 
//                  ${isInTask ? 'border-yellow-400 bg-yellow-50' : 'border-gray-200 hover:shadow-md cursor-pointer'}`}
//       onClick={handleAdd} // ‚úÖ ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá Add to Task ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶π‡¶¨‡ßá
//     >
      
//       {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
//       <div className="flex justify-between items-start mb-2">
//         <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
//           {ticket.title}
//         </h3>
//         {/* ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú: badge ‡¶è‡¶¨‡¶Ç badge-outline ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá badge-sm ‡¶ì badge-success ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá */}
//         <span className={`badge badge-sm ${getStatusClass(ticket.status)} text-white whitespace-nowrap`}> 
//           {ticket.status}
//         </span>
//       </div>

//       {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
//       <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
//         {ticket.description}
//       </p>

//       {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
//       <div className="flex justify-between items-end border-t border-gray-100 pt-3 mt-3">
//         {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
//         <div className="flex flex-col gap-1 text-xs">
//           <div className="text-gray-500">
//             #{ticket.id} ‚Ä¢ <span className="font-medium text-gray-700">{ticket.customer}</span>
//           </div>
//           <div className={`uppercase ${getPriorityClass(ticket.priority)}`}>
//             {ticket.priority} PRIORITY
//           </div>
//         </div>

//         {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶°‡ßá‡¶ü ‡¶è‡¶¨‡¶Ç Add Button */}
//         <div className="flex items-center gap-3">
//           {/* ‡¶°‡ßá‡¶ü ‡¶Ü‡¶á‡¶ï‡¶® ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü */}
//           {/* ... (Date SVG and text remains the same) ... */}
          
//           {/* ‚úÖ Add to Task ‡¶¨‡¶æ‡¶ü‡¶® - ‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶æ‡¶§‡ßá ‡¶®‡¶æ ‡¶ö‡¶æ‡¶® ‡¶§‡¶¨‡ßá ‡¶¨‡¶æ‡¶ü‡¶®‡¶ü‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¶‡¶ø‡¶® */}
//           {!isInTask && (
//             <button className="btn btn-xs btn-primary ml-2" onClick={(e) => { e.stopPropagation(); handleAdd(); }}>
//               Add to Task
//             </button>
//           )}
//           {isInTask && (
//             <span className="text-xs text-yellow-600 font-semibold ml-2">In Task</span>
//           )}
//         </div>
//       </div>
//     </article>
//   );
// }







// import React, { useContext } from "react";
// import { TicketContext } from "../../context/TicketContext";
// import { toast } from "react-toastify";
// // ... (CalendarIcon SVG remains the same)

// export default function TicketCard({ ticket }) {
//   const { addTask, tasks } = useContext(TicketContext);
  
//   // ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü‡¶ü‡¶ø ‡¶á‡¶®-‡¶™‡ßç‡¶∞‡¶ó‡ßç‡¶∞‡ßá‡¶∏‡ßá ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
//   const isInTask = tasks.some(t => t.id === ticket.id);

//   // ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®: Add to Task
//   const handleAdd = () => {
//     if (isInTask) {
//        toast.warn(`${ticket.title} is already in In-Progress.`);
//        return;
//     }
//     addTask(ticket);
//     toast.info(`${ticket.title} added to In-Progress!`);
//   };

//   // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∞‡¶Ç ‡¶ì ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const getStatusClass = (status) => {
//     switch (status.toLowerCase()) {
//       case 'open':
//         // üü¢ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶ó‡ßã‡¶≤ ‡¶∏‡¶ø‡¶ó‡¶®‡¶æ‡¶≤: DaisyUI ‡¶è‡¶∞ badge-success ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
//         return 'badge-success'; 
//       case 'in-progress':
//         return 'badge-warning'; 
//       default:
//         return 'badge-neutral';
//     }
//   };
  
//   // ... (getPriorityClass and formatDate remain the same) ...

//   return (
//     // ‡¶™‡ßÅ‡¶∞‡ßã ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø‡¶§‡¶æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
//     <article 
//       className={`bg-white border p-4 rounded-lg shadow-sm transition duration-200 
//                  ${isInTask ? 'border-yellow-400 bg-yellow-50' : 'border-gray-200 hover:shadow-md cursor-pointer'}`}
//       onClick={handleAdd} // ‚úÖ ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá Add to Task ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶π‡¶¨‡ßá
//     >
      
//       {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
//       <div className="flex justify-between items-start mb-2">
//         <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
//           {ticket.title}
//         </h3>
//         {/* ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú: badge ‡¶è‡¶¨‡¶Ç badge-outline ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá badge-sm ‡¶ì badge-success ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá */}
//         <span className={`badge badge-sm ${getStatusClass(ticket.status)} text-white whitespace-nowrap`}> 
//           {ticket.status}
//         </span>
//       </div>

//       {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
//       <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
//         {ticket.description}
//       </p>

//       {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
//       <div className="flex justify-between items-end border-t border-gray-100 pt-3 mt-3">
//         {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
//         <div className="flex flex-col gap-1 text-xs">
//           <div className="text-gray-500">
//             #{ticket.id} ‚Ä¢ <span className="font-medium text-gray-700">{ticket.customer}</span>
//           </div>
//           <div className={`uppercase ${getPriorityClass(ticket.priority)}`}>
//             {ticket.priority} PRIORITY
//           </div>
//         </div>

//         {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶°‡ßá‡¶ü ‡¶è‡¶¨‡¶Ç Add Button */}
//         <div className="flex items-center gap-3">

//         <div className="text-xs text-gray-500 flex items-center gap-1">
//              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
//                 <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5" />
//              </svg>
//               {formatDate(ticket.createdAt)} {/* ‚úÖ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡¶ü‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá */}
//               </div>

//           {/* ‡¶°‡ßá‡¶ü ‡¶Ü‡¶á‡¶ï‡¶® ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü */}
//           {/* ... (Date SVG and text remains the same) ... */}
          
//           {/* ‚úÖ Add to Task ‡¶¨‡¶æ‡¶ü‡¶® - ‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶æ‡¶§‡ßá ‡¶®‡¶æ ‡¶ö‡¶æ‡¶® ‡¶§‡¶¨‡ßá ‡¶¨‡¶æ‡¶ü‡¶®‡¶ü‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¶‡¶ø‡¶® */}
//           {!isInTask && (
//             <button className="btn btn-xs btn-primary ml-2" onClick={(e) => { e.stopPropagation(); handleAdd(); }}>
//               Add to Task
//             </button>
//           )}
//           {isInTask && (
//             <span className="text-xs text-yellow-600 font-semibold ml-2">In Task</span>
//           )}
//         </div>
//       </div>
//     </article>
//   );
// }





// import React, { useContext } from "react";
// import { TicketContext } from "../../context/TicketContext";
// import { toast } from "react-toastify";
// // ... (CalendarIcon SVG remains the same)

// export default function TicketCard({ ticket }) {
//   // ‡¶Ø‡¶¶‡¶ø ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü ‡¶™‡ßç‡¶∞‡¶™‡¶∏ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶®‡¶æ ‡¶Ü‡¶∏‡ßá, ‡¶§‡¶¨‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶á ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ø‡¶æ‡¶ì
//   if (!ticket) return null; 
  
//   const { addTask, tasks } = useContext(TicketContext);
  
//   // ‚úÖ ‡¶¨‡¶æ‡¶ó ‡¶´‡¶ø‡¶ï‡ßç‡¶∏: ‡¶≠‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßá 't' ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
//   const isInTask = tasks.some(t => t.id === ticket.id); 

//   // ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®: Add to Task
//   const handleAdd = () => {
//     if (isInTask) {
//        toast.warn(`${ticket.title} is already in In-Progress.`);
//        return;
//     }
//     addTask(ticket);
//     toast.info(`${ticket.title} added to In-Progress!`);
//   };

//   // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∞‡¶Ç ‡¶ì ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const getStatusClass = (status) => {
//     switch ((status || '').toLowerCase()) {
//       case 'open':
//         return 'bg-green-500 text-white'; 
//       case 'in-progress':
//         return 'bg-yellow-500 text-white'; 
//       case 'resolved':
//         return 'bg-gray-400 text-white'; 
//       default:
//         return 'bg-gray-200 text-gray-800';
//     }
//   };
  
//   /**
//    * üö® ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶è‡¶∞‡¶∞ ‡¶´‡¶ø‡¶ï‡ßç‡¶∏: ‡¶è‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§ ‡¶õ‡¶ø‡¶≤
//    */
//   const getPriorityClass = (priority) => {
//     switch ((priority || '').toLowerCase()) {
//       case 'high':
//         return 'text-red-600 font-semibold';
//       case 'medium':
//         return 'text-yellow-600 font-semibold';
//       case 'low':
//         return 'text-green-600 font-semibold';
//       default:
//         return 'text-gray-600';
//     }
//   };

//   /**
//    * üö® ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡¶Ø‡¶º ‡¶è‡¶∞‡¶∞ ‡¶´‡¶ø‡¶ï‡ßç‡¶∏: formatDate ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø‡¶ì ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®
//    */
//   const formatDate = (dateString) => {
//     if (!dateString) return '';
//     try {
//       const date = new Date(dateString);
//       return date.toLocaleDateString('en-US', { day: 'numeric', month: 'numeric' });
//     } catch (e) {
//       return dateString;
//     }
//   };

//   return (
//     // ... (‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç ‡¶Ö‡¶Ç‡¶∂‡¶ü‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã) ...
//     <article 
//       className={`bg-white border p-4 rounded-lg shadow-sm transition duration-200 
//                  ${isInTask ? 'border-yellow-400 bg-yellow-50' : 'border-gray-200 hover:shadow-md cursor-pointer'}`}
//       onClick={handleAdd}
//     >
      
//       {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
//       <div className="flex justify-between items-start mb-2">
//         <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
//           {ticket.title}
//         </h3>
//         <span className={`text-xs px-2 py-1 rounded ${getStatusClass(ticket.status)} whitespace-nowrap`}> 
//           {ticket.status}
//         </span>
//       </div>

//       {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
//       <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
//         {ticket.description}
//       </p>

//       {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
//       <div className="flex justify-between items-end border-t border-gray-100 pt-3 mt-3">
//         {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
//         <div className="flex flex-col gap-1 text-xs">
//           <div className="text-gray-500">
//             #{ticket.id} ‚Ä¢ <span className="font-medium text-gray-700">{ticket.customer}</span>
//           </div>
//           <div className={`uppercase ${getPriorityClass(ticket.priority)}`}>
//             {ticket.priority} PRIORITY
//           </div>
//         </div>

//         {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶°‡ßá‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶æ‡¶ü‡¶® */}
//         <div className="flex items-center gap-3">

//         <div className="text-xs text-gray-500 flex items-center gap-1">
//              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
//                  <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5" />
//              </svg>
//  {formatDate(ticket.createdAt)}
//  </div>

// {/* ‚úÖ Add to Task ‡¶¨‡¶æ‡¶ü‡¶® - ‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶æ‡¶§‡ßá ‡¶®‡¶æ ‡¶ö‡¶æ‡¶® ‡¶§‡¶¨‡ßá ‡¶¨‡¶æ‡¶ü‡¶®‡¶ü‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¶‡¶ø‡¶® */}
//  {!isInTask && (
//  <button className="btn btn-xs btn-primary ml-2" onClick={(e) => { e.stopPropagation(); handleAdd(); }}>
//  Add to Task
//  </button>
// )}
//  {isInTask && (
//  <span className="text-xs text-yellow-600 font-semibold ml-2">In Task</span>
//  )}
// </div>
//  </div>
// </article>
//   );
// }






// import React, { useContext } from "react";
// import { TicketContext } from "../../context/TicketContext";
// import { toast } from "react-toastify";

// export default function TicketCard({ ticket }) {
//   if (!ticket) return null; 
  
//   const { addTask, tasks } = useContext(TicketContext);
  
//   // ‚úÖ ‡¶¨‡¶æ‡¶ó ‡¶´‡¶ø‡¶ï‡ßç‡¶∏‡¶°: ‡¶≠‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶∏‡¶Ç‡¶ò‡¶æ‡¶§ ‡¶è‡¶°‡¶º‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá
//   const isInTask = tasks.some(t => t.id === ticket.id); 

//   const handleAdd = () => {
//     if (isInTask) {
//        toast.warn(`${ticket.title} is already in Task Status.`);
//        return;
//     }
//     // ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü‡¶ü‡¶ø In-Progress ‡¶è ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá
//     addTask(ticket);
//     toast.info(`${ticket.title} added to Task Status!`);
//   };

//   // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∞‡¶Ç ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶õ‡¶¨‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ)
//   const getStatusClass = (status) => {
//     switch ((status || '').toLowerCase()) {
//       case 'open':
//         // üü¢ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶°
//         return 'bg-green-100 text-green-700 border-green-300'; 
//       case 'in-progress':
//         // üü° ‡¶π‡¶≤‡ßÅ‡¶¶ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶°
//         return 'bg-yellow-100 text-yellow-700 border-yellow-300'; 
//       default:
//         return 'bg-gray-100 text-gray-700 border-gray-300';
//     }
//   };

//   // ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∞‡¶Ç ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const getPriorityClass = (priority) => {
//     switch ((priority || '').toLowerCase()) {
//       case 'high':
//         // ‡¶≤‡¶æ‡¶≤ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü
//         return 'text-red-600 font-semibold';
//       case 'medium':
//         // ‡¶ï‡¶Æ‡¶≤‡¶æ/‡¶π‡¶≤‡ßÅ‡¶¶ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü
//         return 'text-orange-500 font-semibold';
//       case 'low':
//         // ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü
//         return 'text-green-600 font-semibold';
//       default:
//         return 'text-gray-600';
//     }
//   };

//   // ‡¶°‡ßá‡¶ü ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const formatDate = (dateString) => {
//     if (!dateString) return '';
//     try {
//       const date = new Date(dateString);
//       // ‡¶õ‡¶¨‡¶ø‡¶§‡ßá MM/DD/YYYY ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
//       return date.toLocaleDateString('en-US', { day: 'numeric', month: 'numeric', year: '2-digit' });
//     } catch (e) {
//       return dateString;
//     }
//   };

//   return (
//     // ‡¶ï‡¶æ‡¶∞‡ßç‡¶° ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®: ‡¶õ‡¶¨‡¶ø‡¶§‡ßá ‡¶∏‡¶æ‡¶Æ‡¶æ‡¶®‡ßç‡¶Ø ‡¶®‡ßÄ‡¶≤ ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ì ‡¶π‡¶æ‡¶≤‡¶ï‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶Ü‡¶õ‡ßá
//     <article 
//       className={`bg-white border p-4 rounded-lg shadow-sm transition duration-200 border-l-4 
//                  ${isInTask ? 'border-l-yellow-400 bg-yellow-50' : 'border-l-blue-400 hover:shadow-md cursor-pointer'}`}
//       onClick={handleAdd} // ‚úÖ ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶π‡¶¨‡ßá (‡¶¨‡¶æ‡¶ü‡¶® ‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶£‡ßá)
//     >
      
//       {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
//       <div className="flex justify-between items-start mb-2">
//         <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
//           {ticket.title}
//         </h3>
//         {/* ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú: ‡¶õ‡¶¨‡¶ø‡¶§‡ßá ‡¶õ‡ßã‡¶ü, ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶Ü‡¶õ‡ßá */}
//         <span className={`text-xs px-2 py-0.5 rounded-full border ${getStatusClass(ticket.status)} whitespace-nowrap`}> 
//           {ticket.status}
//         </span>
//       </div>

//       {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
//       <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
//         {ticket.description}
//       </p>

//       {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
//       <div className="flex justify-between items-center border-t border-gray-100 pt-3 mt-3">
        
//         {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
//         <div className="flex items-center gap-3 text-xs">
//           <span className="text-gray-500">#{ticket.id}</span>
//           <span className={`uppercase ${getPriorityClass(ticket.priority)}`}>
//             {ticket.priority} PRIORITY
//           </span>
//         </div>

//         {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶°‡ßá‡¶ü */}
//         <div className="flex items-center gap-3 text-xs">
//           <span className="text-gray-700">{ticket.customer}</span>
          
//           <div className="text-gray-500 flex items-center gap-1">
//              {/* ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶Ü‡¶á‡¶ï‡¶® */}
//              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
//                 <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5" />
//              </svg>
//             {formatDate(ticket.createdAt)}
//            </div>
//         </div>
//       </div>
//     </article>
//   );
// }









// import React, { useContext } from "react";
// import { TicketContext } from "../../context/TicketContext";
// import { toast } from "react-toastify";

// export default function TicketCard({ ticket }) {
//   // ‡¶Ø‡¶¶‡¶ø ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü ‡¶™‡ßç‡¶∞‡¶™‡¶∏ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶®‡¶æ ‡¶Ü‡¶∏‡ßá, ‡¶§‡¶¨‡ßá ‡¶è‡¶∞‡¶∞ ‡¶è‡¶°‡¶º‡¶æ‡¶§‡ßá null ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶®
//   if (!ticket) return null; 
  
//   const { addTask, tasks } = useContext(TicketContext);
  
//   // ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü‡¶ü‡¶ø Task Status-‡¶è ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ
//   const isInTask = tasks.some(t => t.id === ticket.id); 

//   // ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const handleAdd = () => {
//     if (isInTask) {
//        toast.warn(`${ticket.title} is already in Task Status.`);
//        return;
//     }
//     addTask(ticket);
//     toast.info(`${ticket.title} added to Task Status!`);
//   };

//   // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø Tailwind ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏
//   const getStatusClass = (status) => {
//     switch ((status || '').toLowerCase()) {
//       case 'open':
//         // üü¢ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú (‡¶õ‡¶¨‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ)
//         return 'bg-green-100 text-green-700 border-green-300'; 
//       case 'in-progress':
//         // üü° ‡¶π‡¶≤‡ßÅ‡¶¶ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú (‡¶õ‡¶¨‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ)
//         return 'bg-yellow-100 text-yellow-700 border-yellow-300'; 
//       default:
//         return 'bg-gray-100 text-gray-700 border-gray-300';
//     }
//   };

//   // ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá‡¶∞ ‡¶¨‡¶æ‡¶Æ‡¶¶‡¶ø‡¶ï‡ßá‡¶∞ ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏
//   const getBorderColor = (status) => {
//       switch ((status || '').toLowerCase()) {
//         case 'open':
//             return 'border-l-green-500'; // ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞
//         case 'in-progress':
//             return 'border-l-yellow-500'; // ‡¶π‡¶≤‡ßÅ‡¶¶ ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞
//         default:
//             return 'border-l-gray-300';
//       }
//   };

//   // ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∞‡¶Ç ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const getPriorityClass = (priority) => {
//     switch ((priority || '').toLowerCase()) {
//       case 'high':
//         return 'text-red-600 font-semibold';
//       case 'medium':
//         return 'text-orange-500 font-semibold';
//       case 'low':
//         return 'text-green-600 font-semibold';
//       default:
//         return 'text-gray-600';
//     }
//   };

//   // ‡¶°‡ßá‡¶ü ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const formatDate = (dateString) => {
//     if (!dateString) return '';
//     try {
//       const date = new Date(dateString);
//       // MM/DD/YY ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü (‡¶õ‡¶¨‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ)
//       return date.toLocaleDateString('en-US', { month: 'numeric', day: 'numeric', year: '2-digit' });
//     } catch (e) {
//       return dateString;
//     }
//   };

//   return (
//     // ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®, ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞-‡¶≤‡ßá‡¶´‡¶ü ‡¶∏‡¶π
//     <article 
//       className={`bg-white border p-4 rounded-lg shadow-sm transition duration-200 border-l-4 
//                  ${getBorderColor(ticket.status)} hover:shadow-md cursor-pointer`}
//       onClick={handleAdd} // ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶π‡¶¨‡ßá
//     >
      
//       {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
//       <div className="flex justify-between items-start mb-2">
//         <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
//           {ticket.title}
//         </h3>
//         {/* ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
//         <span className={`text-xs px-2 py-0.5 rounded-full border ${getStatusClass(ticket.status)} whitespace-nowrap`}> 
//           {/* ‚úÖ ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡ßá‡¶∞ ‡¶Ü‡¶∏‡¶≤ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá */}
//           {ticket.status} 
//         </span>
//       </div>

//       {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
//       <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
//         {ticket.description}
//       </p>

//       {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
//       <div className="flex justify-between items-center border-t border-gray-100 pt-3 mt-3">
        
//         {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
//         <div className="flex items-center gap-3 text-xs">
//           <span className="text-gray-500">#{ticket.id}</span>
//           <span className={`uppercase ${getPriorityClass(ticket.priority)}`}>
//             {ticket.priority} PRIORITY
//           </span>
//         </div>

//         {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶°‡ßá‡¶ü */}
//         <div className="flex items-center gap-3 text-xs">
//           <span className="text-gray-700">{ticket.customer}</span>
          
//           {/* ‡¶°‡ßá‡¶ü ‡¶Ü‡¶á‡¶ï‡¶® ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü */}
//           <div className="text-gray-500 flex items-center gap-1">
//              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
//                 <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5" />
//              </svg>
// ¬† ¬† ¬† ¬† ¬† ¬† ¬† {/* ‚úÖ ticket.createdAt ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá */}
// ¬† ¬† ¬† ¬† ¬† ¬† ¬† {formatDate(ticket.createdAt)}
// ¬† ¬† ¬† ¬† ¬† </div>
          
//         </div>
//       </div>
//     </article>
//   );
// }








// import React, { useContext } from "react";
// import { TicketContext } from "../../context/TicketContext";
// import { toast } from "react-toastify";

// export default function TicketCard({ ticket }) {
//   if (!ticket) return null; 
  
//   const { addTask, tasks } = useContext(TicketContext);
  
//   const isInTask = tasks.some(t => t.id === ticket.id); 

//   const handleAdd = () => {
//     if (isInTask) {
//        toast.warn(`${ticket.title} is already in Task Status.`);
//        return;
//     }
//     addTask(ticket);
//     toast.info(`${ticket.title} added to Task Status!`);
//   };

//   // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ (‡¶õ‡¶¨‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ)
//   const getStatusClass = (status) => {
//     switch ((status || '').toLowerCase()) {
//       case 'open':
//         // üü¢ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú
//         return 'bg-green-100 text-green-700 border-green-300'; 
//       case 'in-progress':
//         // üü° ‡¶π‡¶≤‡ßÅ‡¶¶ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú
//         return 'bg-yellow-100 text-yellow-700 border-yellow-300'; 
//       default:
//         return 'bg-gray-100 text-gray-700 border-gray-300';
//     }
//   };

//   // ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∞‡¶Ç ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const getPriorityClass = (priority) => {
//     switch ((priority || '').toLowerCase()) {
//       case 'high':
//         return 'text-red-600 font-semibold';
//       case 'medium':
//         return 'text-orange-500 font-semibold';
//       case 'low':
//         return 'text-green-600 font-semibold';
//       default:
//         return 'text-gray-600';
//     }
//   };

//   // ‡¶°‡ßá‡¶ü ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const formatDate = (dateString) => {
//     if (!dateString) return '';
//     try {
//       const date = new Date(dateString);
//       return date.toLocaleDateString('en-US', { month: 'numeric', day: 'numeric', year: '2-digit' });
//     } catch (e) {
//       return dateString;
//     }
//   };

//   return (
//     // ‚úÖ ‡¶´‡¶ø‡¶ï‡ßç‡¶∏: ‡¶¨‡¶æ‡¶Æ‡¶¶‡¶ø‡¶ï‡ßá‡¶∞ ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞ (`border-l-4`) ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶∞‡ßÇ‡¶™‡ßá ‡¶∏‡¶∞‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶≤‡ßã‡•§
//     <article 
//       className={`bg-white border border-gray-200 p-4 rounded-lg shadow-sm transition duration-200 
//                  hover:shadow-md cursor-pointer`}
//       onClick={handleAdd} // ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶π‡¶¨‡ßá
//     >
      
//       {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
//       <div className="flex justify-between items-start mb-2">
//         <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
//           {ticket.title}
//         </h3>
//         {/* ‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶´‡¶ø‡¶ï‡ßç‡¶∏: ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ó‡ßã‡¶≤ ‡¶∏‡¶ø‡¶ó‡¶®‡¶æ‡¶≤ (dot) ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã */}
//         <span className={`text-xs px-2 py-0.5 rounded-full border flex items-center gap-1 ${getStatusClass(ticket.status)} whitespace-nowrap`}> 
//           {/* ‡¶ó‡ßã‡¶≤ ‡¶∏‡¶ø‡¶ó‡¶®‡¶æ‡¶≤ (‡¶õ‡ßã‡¶ü ‡¶¨‡ßÉ‡¶§‡ßç‡¶§) */}
//           <span className={`h-2 w-2 rounded-full ${ticket.status.toLowerCase() === 'open' ? 'bg-green-500' : 'bg-yellow-500'}`}></span>
//           {ticket.status} 
//         </span>
//       </div>

//       {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
//       <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
//         {ticket.description}
//       </p>

//       {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
//       <div className="flex justify-between items-center border-t border-gray-100 pt-3 mt-3">
        
//         {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
//         <div className="flex items-center gap-3 text-xs">
//           <span className="text-gray-500">#{ticket.id}</span>
//           <span className={`uppercase ${getPriorityClass(ticket.priority)}`}>
//             {ticket.priority} PRIORITY
//           </span>
//         </div>

//         {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶°‡ßá‡¶ü */}
//         <div className="flex items-center gap-3 text-xs">
//           <span className="text-gray-700">{ticket.customer}</span>
          
//           <div className="text-gray-500 flex items-center gap-1">
//              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
//                 <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5" />
//              </svg>
// ¬† ¬† ¬† ¬† ¬† ¬† ¬† {formatDate(ticket.createdAt)}
// ¬† ¬† ¬† ¬† ¬† </div>
          
//         </div>
//       </div>
//     </article>
//   );
// }





// src/components/TicketCard/TicketCard.jsx (‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶´‡¶ø‡¶ï‡ßç‡¶∏)

// import React, { useContext } from "react";
// import { TicketContext } from "../../context/TicketContext";
// import { toast } from "react-toastify";

// export default function TicketCard({ ticket }) {
//   if (!ticket) return null; 
  
//   const { addTask, tasks } = useContext(TicketContext);
  
//   // ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü‡¶ü‡¶ø Task Status-‡¶è ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ (In-Progress)
//   const isInTask = tasks.some(t => t.id === ticket.id); 

//   // ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const handleAdd = () => {
//     if (isInTask) {
//        toast.warn(`${ticket.title} is already in Task Status.`);
//        return;
//     }
//     addTask(ticket);
//     toast.info(`${ticket.title} added to Task Status!`);
//   };

//   // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ (‡¶õ‡¶¨‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ)
//   const getStatusClass = (status) => {
//     switch ((status || '').toLowerCase()) {
//       case 'open':
//         // üü¢ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú
//         return 'bg-green-100 text-green-700 border-green-300'; 
//       case 'in-progress':
//         // üü° ‡¶π‡¶≤‡ßÅ‡¶¶ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú
//         return 'bg-yellow-100 text-yellow-700 border-yellow-300'; 
//       default:
//         // Default (Resolved-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ü‡¶ø TaskStatus ‡¶è ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶ï‡¶•‡¶æ ‡¶®‡¶Ø‡¶º)
//         return 'bg-gray-100 text-gray-700 border-gray-300';
//     }
//   };

//   // ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∞‡¶Ç ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const getPriorityClass = (priority) => {
//     switch ((priority || '').toLowerCase()) {
//       case 'high':
//         return 'text-red-600 font-semibold';
//       case 'medium':
//         return 'text-orange-500 font-semibold';
//       case 'low':
//         return 'text-green-600 font-semibold';
//       default:
//         return 'text-gray-600';
//     }
//   };

//   // ‡¶°‡ßá‡¶ü ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
//   const formatDate = (dateString) => {
//     if (!dateString) return '';
//     try {
//       const date = new Date(dateString);
//       return date.toLocaleDateString('en-US', { month: 'numeric', day: 'numeric', year: '2-digit' });
//     } catch (e) {
//       return dateString;
//     }
//   };

//   return (
//     // ‡¶¨‡¶æ‡¶Æ‡¶¶‡¶ø‡¶ï‡ßá‡¶∞ ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶∞‡ßÇ‡¶™‡ßá ‡¶∏‡¶∞‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá
//     <article 
//       className={`bg-white border border-gray-200 p-4 rounded-lg shadow-sm transition duration-200 
//                  hover:shadow-md cursor-pointer`}
//       onClick={handleAdd}
//     >
      
//       {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
//       <div className="flex justify-between items-start mb-2">
//         <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
//           {ticket.title}
//         </h3>
//         {/* ‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶´‡¶ø‡¶ï‡ßç‡¶∏: ‡¶ó‡ßã‡¶≤ ‡¶∏‡¶ø‡¶ó‡¶®‡¶æ‡¶≤ (Dot) ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá */}
//         <span className={`text-xs px-2 py-0.5 rounded-full border flex items-center gap-1 ${getStatusClass(ticket.status)} whitespace-nowrap`}> 
//           {/* ‡¶ó‡ßã‡¶≤ ‡¶∏‡¶ø‡¶ó‡¶®‡¶æ‡¶≤ (‡¶¨‡ßÉ‡¶§‡ßç‡¶§) */}
//           <span className={`h-2 w-2 rounded-full ${
//              ticket.status.toLowerCase() === 'open' ? 'bg-green-500' : 
//              ticket.status.toLowerCase() === 'in-progress' ? 'bg-yellow-500' : 'bg-gray-500'
//           }`}></span>
//           {ticket.status} 
//         </span>
//       </div>

//       {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
//       <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
//         {ticket.description}
//       </p>

//       {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
//       <div className="flex justify-between items-center border-t border-gray-100 pt-3 mt-3">
        
//         {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
//         <div className="flex items-center gap-3 text-xs">
//           <span className="text-gray-500">#{ticket.id}</span>
//           <span className={`uppercase ${getPriorityClass(ticket.priority)}`}>
//             {ticket.priority} PRIORITY
//           </span>
//         </div>

//         {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶°‡ßá‡¶ü */}
//         <div className="flex items-center gap-3 text-xs">
//           <span className="text-gray-700">{ticket.customer}</span>
          
//           <div className="text-gray-500 flex items-center gap-1">
//              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
//                 <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5" />
//              </svg>
// ¬† ¬† ¬† ¬† ¬† ¬† ¬† {formatDate(ticket.createdAt)}
// ¬† ¬† ¬† ¬† ¬† </div>
          
//         </div>
//       </div>
//     </article>
//   );
// }







// src/components/TicketCard/TicketCard.jsx

import React, { useContext } from "react";
import { TicketContext } from "../../context/TicketContext";
import { toast } from "react-toastify";

export default function TicketCard({ ticket }) {
  if (!ticket) return null; 
  
  const { addTask, tasks } = useContext(TicketContext);
  
  // ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü‡¶ü‡¶ø Task Status-‡¶è ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ (In-Progress)
  const isInTask = tasks.some(t => t.id === ticket.id); 

  // ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
  const handleAdd = () => {
    if (isInTask) {
       toast.warn(`${ticket.title} is already in Task Status.`);
       return;
    }
    addTask(ticket);
    toast.info(`${ticket.title} added to Task Status!`);
  };

  // ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ (‡¶õ‡¶¨‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ)
  const getStatusClass = (status) => {
    switch ((status || '').toLowerCase()) {
      case 'open':
        return 'bg-green-100 text-green-700 border-green-300'; 
      case 'in-progress':
        return 'bg-yellow-100 text-yellow-700 border-yellow-300'; 
      case 'resolved': // Resolved ‡¶ü‡¶ø‡¶ï‡¶ø‡¶ü‡¶ó‡ßÅ‡¶≤‡ßã ‡¶è‡¶ñ‡¶® Home.jsx ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶∏‡ßá‡¶´‡¶ü‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡¶≤‡ßã
        return 'bg-gray-100 text-gray-700 border-gray-300'; 
      default:
        return 'bg-gray-100 text-gray-700 border-gray-300';
    }
  };

  // ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∞‡¶Ç ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
  const getPriorityClass = (priority) => {
    switch ((priority || '').toLowerCase()) {
      case 'high':
        return 'text-red-600 font-semibold';
      case 'medium':
        return 'text-orange-500 font-semibold';
      case 'low':
        return 'text-green-600 font-semibold';
      default:
        return 'text-gray-600';
    }
  };

  // ‡¶°‡ßá‡¶ü ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
  const formatDate = (dateString) => {
    if (!dateString) return '';
    try {
      const date = new Date(dateString);
      return date.toLocaleDateString('en-US', { month: 'numeric', day: 'numeric', year: '2-digit' });
    } catch (e) {
      return dateString;
    }
  };

  return (
    // ‡¶¨‡¶æ‡¶Æ‡¶¶‡¶ø‡¶ï‡ßá‡¶∞ ‡¶¨‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶∞‡ßÇ‡¶™‡ßá ‡¶∏‡¶∞‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá
    <article 
      className={`bg-white border border-gray-200 p-4 rounded-lg shadow-sm transition duration-200 
                 hover:shadow-md ${!isInTask ? 'cursor-pointer' : ''}`}
      onClick={!isInTask ? handleAdd : null} // In-Progress ‡¶π‡¶≤‡ßá ‡¶Ü‡¶∞ ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶π‡¶¨‡ßá ‡¶®‡¶æ
    >
      
      {/* ‡¶π‡ßá‡¶°‡¶æ‡¶∞: ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ ‡¶ì ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú */}
      <div className="flex justify-between items-start mb-2">
        <h3 className="font-bold text-base text-gray-800 mr-4 leading-snug">
          {ticket.title}
        </h3>
        {/* ‚úÖ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶´‡¶ø‡¶ï‡ßç‡¶∏: ‡¶ó‡ßã‡¶≤ ‡¶∏‡¶ø‡¶ó‡¶®‡¶æ‡¶≤ (Dot) ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá */}
        <span className={`text-xs px-2 py-0.5 rounded-full border flex items-center gap-1 ${getStatusClass(ticket.status)} whitespace-nowrap`}> 
          {/* ‡¶ó‡ßã‡¶≤ ‡¶∏‡¶ø‡¶ó‡¶®‡¶æ‡¶≤ (‡¶¨‡ßÉ‡¶§‡ßç‡¶§) */}
          <span className={`h-2 w-2 rounded-full ${
             ticket.status.toLowerCase() === 'open' ? 'bg-green-500' : 
             ticket.status.toLowerCase() === 'in-progress' ? 'bg-yellow-500' : 'bg-gray-500'
          }`}></span>
          {ticket.status} 
        </span>
      </div>

      {/* ‡¶°‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® */}
      <p className="text-sm text-gray-600 mt-1 mb-4 line-clamp-2">
        {ticket.description}
      </p>

      {/* ‡¶´‡ßÅ‡¶ü‡¶æ‡¶∞: ‡¶Ü‡¶á‡¶°‡¶ø, ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø, ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞, ‡¶°‡ßá‡¶ü */}
      <div className="flex justify-between items-center border-t border-gray-100 pt-3 mt-3">
        
        {/* ‡¶¨‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶Ü‡¶á‡¶°‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶Ø‡¶º‡ßã‡¶∞‡¶ø‡¶ü‡¶ø */}
        <div className="flex items-center gap-3 text-xs">
          <span className="text-gray-500">#{ticket.id}</span>
          <span className={`uppercase ${getPriorityClass(ticket.priority)}`}>
            {ticket.priority} PRIORITY
          </span>
        </div>

        {/* ‡¶°‡¶æ‡¶®‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂: ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶°‡ßá‡¶ü */}
        <div className="flex items-center gap-3 text-xs">
          <span className="text-gray-700">{ticket.customer}</span>
          
          <div className="text-gray-500 flex items-center gap-1">
             <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
                <path strokeLinecap="round" strokeLinejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5" />
             </svg>
¬† ¬† ¬† ¬† ¬† ¬† ¬† {formatDate(ticket.createdAt)}
¬† ¬† ¬† ¬† ¬† </div>
          
        </div>
      </div>
    </article>
  );
}